props:
passed to component
fn parameter
immutable
props , this.props

state:
variables declared inside class
state can be changed
useState, this.state

ex of state in class component

class Subscribe extends Component {
  constructor() {
    super();
    this.state = {
      message: "Welcome",
      sub: false,
    };
  }

  changeMessage() {
    if (!this.state.sub)
      this.setState({ message: "Thanks for subscribing", sub: true });
    else this.setState({ message: "Welcome", sub: false });
  }

  render() {
    return (
      <div>
        <h1>{this.state.message}</h1>
        <button onClick={() => this.changeMessage()}>Subscribe</button>
      </div>
    );
  }
}

super() must be called before the constructor and before starting using 'this'
super() calls the base class constructor and binds the public fields. which can then be used in the derived class (current class where we called the super() )
